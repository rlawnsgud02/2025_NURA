#ifndef __UBX_CONFIG_H__
#define __UBX_CONFIG_H__

#define UBLOX_ADDR 0x42  // u-blox I2C 주소

// Set Update Rate //
// #define RATE_5HZ
#define RATE_4HZ
// #define RATE_2HZ
// ================//
// Set Baud Rate //
// #define PRT_115200
// #define PRT_38400
// #define PRT_19200
// ================//


namespace UBX_config // 사용자 지정 설정
{
    // Dynamic model: 8. airborne < 4g
    const char NAV5[] = {0xB5, 0x62, 0x06, 0x24, 0x24, 0x00, 0xFF, 0xFF, 0x08, 0x03, 0x00, 0x00, 0x00, 0x00, 0x10, 0x27, 0x00,
                         0x00, 0x05, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x64, 0x00, 0x2C, 0x01, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00,
                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x2C};

// Measurement period:
#ifdef RATE_5HZ
    const char RATE[] = {0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, 0xC8, 0x00, 0x01, 0x00, 0x01, 0x00, 0xDE, 0x6A}; // 200ms (5Hz)
#endif
#ifdef RATE_4HZ
    const char RATE[] = {0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, 0xFA, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x96}; // 250ms (4Hz)
#endif
#ifdef RATE_2HZ
const char RATE[] = {
    0xB5, 0x62,             // UBX header
    0x06, 0x08,             // CFG-RATE
    0x06, 0x00,             // length
    0xF4, 0x01,             // measRate = 500ms = 0x01F4
    0x01, 0x00,             // navRate = 1
    0x01, 0x00,             // timeRef = UTC
    0x10, 0x96              // checksum
};
#endif

// Baud rate: 115200
#ifdef PRT_115200
    const char PRT[] = {0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x00, 0xC2, 0x01,
                        0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7E};
#endif
#ifdef PRT_38400
const char PRT[] = {0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 
                    0x96, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x00, 0x00, 
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7E};  // Baudrate 38400으로 변경
#endif
#ifdef PRT_19200
const char PRT[] = {
    0xB5, 0x62,             // UBX header
    0x06, 0x00,             // CFG-PRT
    0x14, 0x00,             // length = 20 bytes
    0x01, 0x00,             // UART1
    0x00, 0x00,             // reserved
    0x80, 0x25, 0x00, 0x00, // 19200 = 0x00002580
    0xD0, 0x08, 0x00, 0x00, // inProtoMask (UBX + NMEA)
    0x00, 0x00, 0x00, 0x00, // outProtoMask (UBX only → 수정 가능)
    0x00, 0x00, 0x00, 0x00, // flags & reserved
    0xB9, 0x5E              // checksum
};
#endif

// #ifdef PRT_921600
//     const char PRT[] = {0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x00, 0x10, 0x0E,
//                         0x00, 0x23, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x3A};
// #endif

    // 0. Full Power
    const char PMS[] = {0xB5, 0x62, 0x06, 0x86, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x5A};
};


#endif